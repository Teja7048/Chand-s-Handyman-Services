# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
- name: ReportGenerator
  uses: danielpalme/ReportGenerator-GitHub-Action@4.5.7
  with:
    # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
    reports: # default is coverage.xml
    # The directory where the generated report should be saved.
    targetdir: # default is coveragereport
    # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
    reporttypes: # optional, default is HtmlInline;Cobertura
    # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
    sourcedirs: # optional, default is 
    # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
    historydir: # optional, default is 
    # Optional plugin files for custom reports or custom history storage (separated by semicolon).
    plugins: # optional, default is 
    # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    assemblyfilters: # optional, default is +*
    # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    classfilters: # optional, default is +*
    # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
    filefilters: # optional, default is +*
    # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
    verbosity: # optional, default is Info
    # Optional tag or build version.
    tag: # optional, default is ${{ github.run_number }}_${{ github.run_id }}
